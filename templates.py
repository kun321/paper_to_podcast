from langchain_core.prompts import ChatPromptTemplate

# Templates
plan_prompt = ChatPromptTemplate.from_template("""你是一个非常聪明的播客脚本策划者。你将获得一篇研究论文的文本，你的任务是为3个人讨论论文内容生成一个非常吸引人、互动性强且充满热情的播客计划。计划将仅使用标题和要点来构建。播客计划应该遵循论文的结构。播客涉及以下角色：
- 主持人：他将以非常吸引人的方式介绍论文及其细节。非常专业、友好、温暖且充满热情。
- 学习者：他会对论文及其内容提出聪明且有意义的问题。他很好奇且有趣。
- 专家：他将对论文内容和其他相关主题提供深入的见解、评论和细节。他说话比其他两人少，但他的发言更深入和详细。
播客结构示例：
# 标题：播客标题
# 第1部分：第1部分标题
- 要点1
- 要点2
- 要点3
...
- 要点n
# 第2部分：第2部分标题
- 要点1
- 要点2
- 要点3
...
- 要点n
# 第3部分：第3部分标题
...
# 第n部分：第n部分标题
- 要点1
- 要点2
- 要点3
...
- 要点n
论文内容：{paper}
请用标题和要点列出播客计划：""")

discuss_prompt_template = ChatPromptTemplate.from_template("""你是一个非常聪明的播客讨论脚本作者。你将获得一个已经开始的播客中间部分的计划，这个播客涉及3个人讨论研究论文的内容。你的任务是为播客生成一个简短的对话，讨论给定的部分，不要包含声音效果，也不要做介绍。对话应该吸引人、互动性强、充满热情，并且有非常巧妙的过渡和转折。对话应该遵循计划的结构。播客涉及以下角色：
- 主持人：他将以非常吸引人的方式介绍论文及其细节。非常专业、友好、温暖且充满热情。
- 学习者：他会对论文及其内容提出聪明且有意义的问题。他很好奇且有趣。
- 专家：他将对论文内容和其他相关主题提供深入的见解、评论和细节。他说话比其他两人少，但他的发言更深入和详细。
对话示例1：
主持人：让我们继续讨论论文的第二部分...
学习者：我有一个问题...
专家：我想补充一点...
对话示例2：
主持人：现在，让我们继续下一部分...
专家：我认为...
学习者：我有一个问题...
专家：我想补充一点...
对话示例3：
学习者：我们要继续下一部分吗？
主持人：是的，让我们继续下一部分...
专家：我认为...
部分计划：{section_plan}
前面的对话（避免重复）：{previous_dialogue}
额外上下文：{additional_context}
请生成简短的部分对话：""")

initial_dialogue_prompt = ChatPromptTemplate.from_template("""你是一个非常聪明的播客开场白作者。你将获得一篇论文的标题和内容的简要概述。避免使用音效，只需要文本。避免以主持人结束，要以专家的发言结束。你的任务是为播客生成一个吸引人且充满热情的开场白。开场白应该引人入胜、互动性强，并且能让听众渴望听到接下来的讨论。播客的开场白应该只有3次互动。播客涉及以下角色：
- 主持人：他将以非常吸引人的方式介绍论文及其细节。非常专业、友好、温暖且充满热情。
- 学习者：他会对论文及其内容提出聪明且有意义的问题。他很好奇且有趣。
- 专家：他将对论文内容和其他相关主题提供深入的见解、评论和细节。他说话比其他两人少，但他的发言更深入和详细。
开场白示例1：
主持人：欢迎收听我们的播客，今天我们将讨论这篇论文...
学习者：我对...很好奇
专家：我认为...
开场白示例2：
主持人：大家好，今天我们有一篇非常有趣的论文要讨论...
专家：我想补充一点...
学习者：我有一个问题...
论文内容：{paper_head}
请生成简短的3次互动开场白：""")

enhance_prompt = ChatPromptTemplate.from_template("""你是一个非常聪明的播客讨论脚本作者。你将获得一个涉及3人讨论研究论文内容的播客脚本。你的任务是通过删除音效、减少重复和冗余来增强脚本。脚本应该只包含人物的对话，不要包含声音效果、笑声、咳嗽或其他音效。增强过渡和转折，减少重复和冗余。
草稿脚本：{draft_script}
增强后的脚本：""")
